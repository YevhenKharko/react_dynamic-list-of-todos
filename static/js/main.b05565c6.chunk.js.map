{"version":3,"sources":["components/TodoFilter/TodoFilter.tsx","components/TodoList/TodoList.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["SortOptions","TodoList","todos","setSelectedPost","selectedPost","isPostSelected","id","className","map","todo","title","completed","cn","type","onClick","TodoFilter","setFilteredTodos","useState","query","setQuery","filterBy","setFilterBy","useEffect","newTodos","sortBy","fiteredTodos","Active","filter","Completed","toLowerCase","includes","filterTodo","onChange","e","target","value","All","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","selectedUser","setSelectedUser","isLoading","setIsLoading","isCompleted","userId","user","catch","error","Error","href","email","name","App","setTodos","filteredTodos","serverTodos","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b05565c6.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, { useEffect, useState } from 'react';\nimport { Todo } from '../../types/Todo';\n\nenum SortOptions {\n  Active = 'active',\n  Completed = 'completed',\n  All = 'all',\n}\n\nconst filterTodo = (todos: Todo[], sortBy: string, query: string) => {\n  let fiteredTodos = [...todos];\n\n  switch (sortBy) {\n    case SortOptions.Active:\n      fiteredTodos = todos.filter(todo => !todo.completed);\n      break;\n\n    case SortOptions.Completed:\n      fiteredTodos = todos.filter(todo => todo.completed);\n      break;\n\n    default:\n      break;\n  }\n\n  if (query) {\n    fiteredTodos = fiteredTodos\n      .filter(todo => todo.title.toLowerCase().includes(query.toLowerCase()));\n  }\n\n  return fiteredTodos;\n};\n\ntype Props = {\n  todos: Todo[],\n  setFilteredTodos: React.Dispatch<React.SetStateAction<Todo[]>>,\n};\n\nexport const TodoFilter: React.FC<Props> = ({ todos, setFilteredTodos }) => {\n  const [query, setQuery] = useState('');\n  const [filterBy, setFilterBy] = useState('');\n\n  useEffect(() => {\n    const newTodos = filterTodo(todos, filterBy, query);\n\n    setFilteredTodos(newTodos);\n  }, [filterBy, query, todos, setFilteredTodos]);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(e) => setFilterBy(e.target.value)}\n          >\n            <option value={SortOptions.All}>All</option>\n\n            <option value={SortOptions.Active}>Active</option>\n\n            <option value={SortOptions.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n\n          {query\n            && (\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => setQuery('')}\n              />\n            )}\n\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  setSelectedPost: (selectedPost: Todo) => void,\n  selectedPost: Todo | null;\n};\n\nexport const TodoList: React.FC<Props> = (\n  {\n    todos,\n    setSelectedPost,\n    selectedPost,\n  },\n\n) => {\n  const isPostSelected = (id: number) => selectedPost?.id === id;\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo) => {\n          const { id, title, completed } = todo;\n\n          return (\n            <tr\n              data-cy=\"todo\"\n              className={cn({\n                'has-background-info-light': isPostSelected(id),\n              })}\n              key={id}\n            >\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {completed\n                  && (\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={\n                    !completed\n                      ? 'has-text-danger'\n                      : 'has-text-success'\n                  }\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => setSelectedPost(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className={cn('far', {\n                      'fa-eye': !isPostSelected(todo.id),\n                      'fa-eye-slash': selectedPost\n                        && isPostSelected(todo.id),\n                    })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport cn from 'classnames';\n\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\n\ntype Props = {\n  setSelectedPost: (selectedPost: Todo | null) => void;\n  selectedPost: Todo | null;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  setSelectedPost,\n  selectedPost,\n}) => {\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const isCompleted = !!selectedPost?.completed;\n\n  useEffect(() => {\n    getUser(selectedPost?.userId || 0)\n      .then(user => {\n        setSelectedUser(user);\n        setIsLoading(false);\n      })\n      .catch(error => {\n        throw new Error(error);\n      });\n  }, [selectedPost?.userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {selectedPost?.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedPost(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedPost?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong className={cn({\n                'has-text-success': isCompleted,\n                'has-text-danger': !isCompleted,\n              })}\n              >\n                {\n                  isCompleted\n                    ? 'Done'\n                    : 'Planned'\n                }\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${selectedUser?.email}}`}>\n                {selectedUser?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [filteredTodos, setFilteredTodos] = useState<Todo[]>([]);\n  const [selectedPost, setSelectedPost] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    getTodos()\n      .then(serverTodos => {\n        setTodos(serverTodos);\n        setIsLoading(false);\n      })\n      .catch(error => {\n        throw new Error(error);\n      });\n  },\n  []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                todos={todos}\n                setFilteredTodos={setFilteredTodos}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading || !todos.length\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={filteredTodos}\n                    setSelectedPost={setSelectedPost}\n                    selectedPost={selectedPost}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedPost && (\n        <TodoModal\n          setSelectedPost={setSelectedPost}\n          selectedPost={selectedPost}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}